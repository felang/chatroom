// Generated by CoffeeScript 1.12.7
var connections, count, net, port, responseData, server

net = require("net")
const Message = require("./message")
const Client = require("./client")
const handleMessage = require('./handle/handle')


server = net.createServer((c)=>{
  let client = Client.new(c)
  c.on("end", ()=>{
    // if (connections[c.id]) delete connections[c.id]
    client.status = 0
    console.log("connection end " + client.id)
  })

  c.on("error", (err)=>{
    client.status = 0
    console.log(err, c.id)

  })

  c.on("data", (chunk)=>{
    var message = Message.ReadMessage(chunk)
    console.log('receive msg', message.content)
    handleMessage[message.cmd](client, message)
    // switch (message.cmd) {
    //   case Message.Type.HB:
    //     console.log(message)
    //     return

    //   case Message.Type.NewMsg:
    //     console.log(message)
    //     setTimeout(()=>{
    //       message.content += "hoho!!"
    //       c.write(message.toChunk())
    //     }, Math.random() * 100)
    //     return
    // }
  })
})

port = process.env.port || 8125

server.listen(port, ()=>{
  console.log("server bound")
  process.stdin.resume()
})

// setInterval(()=>{
//   console.log("count:" + (Object.keys(connections).length) + ", \ntime:" + (new Date()))
// }, 2000)
